// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package snowflakeconnector.actions;

import java.sql.Connection;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import databaseconnector.impl.ResultSetReader;
import net.snowflake.client.core.QueryStatus;
import net.snowflake.client.jdbc.SnowflakeConnection;
import net.snowflake.client.jdbc.SnowflakeResultSet;
import snowflakeconnector.SnowflakeConnector;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.meta.IMetaObject;

/**
 * Retrieves query result based on resultobject and queryId. the QueryId is provided after a successful execution of AsyncQueryExecute
 */
public class AsyncQueryGetResult extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private IMendixObject __connectionBuilder;
	private snowflakeconnector.proxies.ConnectionBuilder connectionBuilder;
	private java.lang.String queryId;
	private IMendixObject resultObject;

	public AsyncQueryGetResult(IContext context, IMendixObject connectionBuilder, java.lang.String queryId, IMendixObject resultObject)
	{
		super(context);
		this.__connectionBuilder = connectionBuilder;
		this.queryId = queryId;
		this.resultObject = resultObject;
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		this.connectionBuilder = __connectionBuilder == null ? null : snowflakeconnector.proxies.ConnectionBuilder.initialize(getContext(), __connectionBuilder);

		// BEGIN USER CODE
		
		// Create Resultlist
		List<IMendixObject> resultList = new ArrayList<IMendixObject>();
		
		// Initiate logger 
		ILogNode logger = Core.getLogger("SnowflakeConnector");	
		
		// Create connection
		logger.info("Creating snowflake connection");
		Connection connection = SnowflakeConnector.getConnection(connectionBuilder);
		
		// Build resultset
		ResultSet rs;
		rs = connection.unwrap(SnowflakeConnection.class).createResultSet(queryId);
		IMetaObject metaObject = resultObject.getMetaObject();
			    
	    // Get Query Status
	    QueryStatus snowflakeQueryStatus = rs.unwrap(SnowflakeResultSet.class).getStatus();
	    
	    if (snowflakeQueryStatus != QueryStatus.SUCCESS) {
	    	logger.error("ERROR: unexpected QueryStatus: " + snowflakeQueryStatus);
	    	
	    } else {
	    	
	    		ResultSetReader resultSetReader = new ResultSetReader(rs, metaObject);
	    		Stream<Map<String, Optional<Object>>> resultStream = resultSetReader.readAll().stream();
	    		Stream<IMendixObject> resultStreamFinal = SnowflakeConnector.streamConverter(resultStream, metaObject, this.getContext());
	    		resultList = resultStreamFinal.collect(Collectors.toList());
	  		
	      }
	    
		// Close connection
	    connection.close();
	    rs.close();
	    
	    // Return results
    	return resultList;
	    
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "AsyncQueryGetResult";
	}

	// BEGIN EXTRA CODE
	
	// END EXTRA CODE
}
