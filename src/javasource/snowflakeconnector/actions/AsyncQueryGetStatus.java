// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package snowflakeconnector.actions;

import java.sql.Connection;
import java.sql.ResultSet;
import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import net.snowflake.client.core.QueryStatus;
import net.snowflake.client.jdbc.SnowflakeConnection;
import net.snowflake.client.jdbc.SnowflakeResultSet;
import snowflakeconnector.SnowflakeConnector;
import snowflakeconnector.proxies.AsyncQueryStatus;
import snowflakeconnector.proxies.Enum_QueryStatus;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class AsyncQueryGetStatus extends CustomJavaAction<IMendixObject>
{
	private IMendixObject __connectionBuilder;
	private snowflakeconnector.proxies.ConnectionBuilder connectionBuilder;
	private java.lang.String queryId;

	public AsyncQueryGetStatus(IContext context, IMendixObject connectionBuilder, java.lang.String queryId)
	{
		super(context);
		this.__connectionBuilder = connectionBuilder;
		this.queryId = queryId;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		this.connectionBuilder = __connectionBuilder == null ? null : snowflakeconnector.proxies.ConnectionBuilder.initialize(getContext(), __connectionBuilder);

		// BEGIN USER CODE

				// Initiate logger 
				ILogNode logger = Core.getLogger("SnowflakeConnector");	
				
				// Initialize result object
				IMendixObject mxObject = Core.instantiate(context(), AsyncQueryStatus.getType());
				AsyncQueryStatus asyncQueryStatus = AsyncQueryStatus.load(getContext(), mxObject.getId());
				
				// Create connection
				logger.info("Creating snowflake connection");
				Connection connection = SnowflakeConnector.getConnection(connectionBuilder);
				
				// Get query status
				ResultSet rs;
				rs = connection.unwrap(SnowflakeConnection.class).createResultSet(queryId);
			    QueryStatus snowflakeQueryStatus = rs.unwrap(SnowflakeResultSet.class).getStatus();
			    

			    // In case of error, set error message
			    if ((snowflakeQueryStatus == QueryStatus.FAILED_WITH_ERROR) || (snowflakeQueryStatus == QueryStatus.FAILED_WITH_INCIDENT)) {
					logger.error("ERROR %d: %s%n, " + snowflakeQueryStatus.getErrorMessage() + ", " + snowflakeQueryStatus.getErrorCode());

					
				// Set error message and errorcode
				asyncQueryStatus.setErrorcode(snowflakeQueryStatus.getErrorCode());
				asyncQueryStatus.setErrormessage(snowflakeQueryStatus.getErrorMessage());

			    } 
			  		
				Enum_QueryStatus queryStatus = Enum_QueryStatus.valueOf(snowflakeQueryStatus.toString());
				asyncQueryStatus.setStatus(queryStatus);
				
				// Close connection
			    connection.close();
			    rs.close();
			    
				return asyncQueryStatus.getMendixObject();
				
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "AsyncQueryGetStatus";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
